// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  document  String
  documentType String
  password  String
  avatar    String
  birthDate DateTime
  phone     String?

  role    UsersTypes[]
  
  addressId String @unique
  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade)

  session   UserSession[]
  adoptions Adoption[]

  pets Pets[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model UsersTypes {
  id        String    @id @default(uuid())
  
  role      UserType

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum UserType {
  SUPERADMIN
  ADMIN
  USER
  ONG
}

model Address {
  id        String    @id @default(uuid())
  street    String
  number    String
  complement String?
  district  String
  city      String
  state     String
  country   String
  zipcode   String
  user User?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model UserSession {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    expires      DateTime
    userId       String
    user User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Pets {
  id        String    @id @default(uuid())
  name      String
  age       Int?
  ageCreatedAt DateTime?  
  birthDate DateTime?
  rescuedAt DateTime?
  species    String
  subSpecies String?
  breed     String?
  images    PetsImages[]
  fiv       Boolean?
  felv      Boolean?
  castrated Boolean?
  
  vaccines  PetsVaccines[]
  tags      PetsTags[]
  description String?
  specialNeeds Boolean?
  needs      String?

  usersId String
  user User @relation(fields: [usersId], references: [id], onDelete: Cascade)

  adoptionId String
  adoptions Adoption[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PetsImages {
  id        String    @id @default(uuid())
  image     String

  petId     String
  pet Pets @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PetsVaccines {
  id        String    @id @default(uuid())
  vaccine   String

  petId     String
  pet Pets @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PetsTags {
  id        String    @id @default(uuid())
  tag       String

  petId     String
  pet Pets @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum PetSpeciesType {
  DOG
  CAT
  BIRD
  FISH
  RODENT
  REPTILE
  OTHER
}

model Adoption {
  id        String    @id @default(uuid())
  status    AdoptionStatusType

  userId     String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  petId     String
  pet Pets @relation(fields: [petId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
} 

enum AdoptionStatusType {
  PENDING
  APPROVED
  CONCLUDED
  REJECTED
  CANCELED
}